#数组的分配和访问
![深入理解计算机系统](array.png "")

上面这段话太绕了,还是看段代码和结果

```
package main
import "fmt"
func main() {
	var name [4]int
	for i := range name {
		fmt.Println(&name[i])
	}
}
```

运行结果如下：

```
0xc000018120
0xc000018128
0xc000018130
0xc000018138
```

从数据中看到了，数组在内存中的地址为 基地址+数据长度*偏移量，感兴趣的可以肯王爽老师的汇编,
所以数组随机访问时间复杂度为O(1),而查找一个值，即使是有序的使用二分查找,时间复杂度为O(logN)

